public class LinkedList{
    Node head = null;
    Node tail = null;
    Integer count = 0;

    public void print()
    {
        List<Integer> data = new List<Integer>();
        Node tmp = head;
        while (tmp != null)
            {
                data.add(tmp.data);
                tmp = tmp.next;
            }
        System.debug('>>>> ' + data);
    }

    public void addToFront(Integer value){
        
        Node newNode = new Node();
        newNode.data = value;

        if (head == null) {
            head = newNode;
            newNode.next = null;
            tail = newNode;
        }
        else {
            newNode.next = head;
            head = newNode;
        }

        count++;
    }

    public Integer removeFromFront(){
        
        if (head == null)
            return null;
        else {
            Integer ret_val = head.data;
            head = head.next;
            count--;
            return ret_val;
        }
    }

    public void addToTail(Integer value){

        Node newNode = new Node();
        
        if (head == null)
            addToFront(value);
        else {
            newNode.data = value;
            newNode.next = null;
            tail.next = newNode;
            tail = tail.next;
            count++;
        }
    }

    public Integer removeFromTail(){
        if (tail == null)
            return null;
        
        Integer ret_val = tail.data;

        if (tail == head) {
            tail = null;
            head = null;
        }
        else {
            Node temp = head;
            while (temp.next != tail) 
                temp = temp.next;

            tail = temp;
            tail.next = null;
        }

        count--;
        return ret_val;
    }

    public Integer size(){
        return count;
    }  
}        

public class Node{
    Integer data;
    Node next;
}